##Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
#Output: 7 -> 0 -> 8
#Explanation: 342 + 465 = 807.
# Linked lists sum from left to right
#

class Node:
	def __init__(self, value):
		self.value = value
		self.next = None

def traverseLL(self):
	node = self
	while node != None:
		print node.value
		node = node.next
def sumLL(nodex, nodey):
	    carry = 0
	    head = Node(0)
	    pointer = head
	    while nodex != None or nodey != None:
		    if nodex != None and nodey != None:
			    total = nodex.value + nodey.value + carry
			    total1 = (total % 10)
			    carry = total / 10
			    pointer.next = Node(total1)
			    nodex = nodex.next
			    nodey = nodey.next
		    elif nodex != None and nodey == None:
			    total1 = nodex.value +carry
			    pointer.next = Node(total1)
			    nodex=nodex.next
		    elif nodey != None and nodex == None:
			    total1 = nodey.value +carry
			    pointer.next = Node(total1)
			    nodey = nodey.next
		    elif carry > 0:
			    pointer.next = Node(carry)
		    pointer = pointer.next
			
	    return head.next


if __name__ == "__main__":
    node1 = Node(2)
    node2 = Node(4)
    node3 = Node(3)
    node4 = Node(5)
    node5 = Node(6)
    node6 = Node(4)
    node1.next = node2
    node2.next = node3
    node4.next = node5
    node5.next = node6
    
    #soln = new Solution(node1,node4)
    
    sum1 = sumLL(node1,node4)
    traverseLL(sum1)
